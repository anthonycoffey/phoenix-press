{"version":3,"file":"555.30d72e448d9e666b3456.js","mappings":"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","sources":["webpack://phoenix-press/./src/components/AddressAutoComplete.jsx","webpack://phoenix-press/./src/components/ServiceSelect.jsx","webpack://phoenix-press/./src/components/PhoneField.jsx","webpack://phoenix-press/./src/components/Answer.jsx","webpack://phoenix-press/./src/components/ConversationalForm.jsx","webpack://phoenix-press/./src/components/Disclaimer.jsx","webpack://phoenix-press/./src/components/LocationIcon.jsx","webpack://phoenix-press/./src/components/SpeechBubble.jsx","webpack://phoenix-press/./src/components/Prompt.jsx"],"sourcesContent":["import {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  Suspense,\n} from \"@wordpress/element\";\nimport { useLoadScript } from \"@react-google-maps/api\";\nconst { GlobalStateContext } = \"../state.js\";\nconst TextField = MaterialUI.TextField;\nconst LinearProgress = MaterialUI.LinearProgress;\nconst Stack = MaterialUI.Stack;\nconst Button = MaterialUI.Button;\nimport LocationIcon from \"./LocationIcon\";\nconst getAddressObject = (address_components) => {\n  const obj = {};\n  if (!address_components) return obj;\n\n  const number = address_components.find((c) =>\n    c.types.includes(\"street_number\"),\n  )?.long_name;\n  const street = address_components.find((c) =>\n    c.types.includes(\"route\"),\n  )?.short_name;\n\n  obj.address_1 = number && street ? `${number} ${street}` : \"\";\n  obj.city =\n    address_components.find((c) => c.types.includes(\"locality\"))?.long_name ||\n    \"\";\n  obj.state =\n    address_components.find((c) =>\n      c.types.includes(\"administrative_area_level_1\"),\n    )?.short_name || \"\";\n  obj.country =\n    address_components.find((c) => c.types.includes(\"country\"))?.short_name ||\n    \"\";\n  obj.zipcode =\n    address_components.find((c) => c.types.includes(\"postal_code\"))\n      ?.long_name || \"\";\n\n  return obj;\n};\n\nconst libraries = [\"places\"];\n\nexport default function AddressAutoComplete({ input }) {\n  const { questions, currentQuestionIndex, setQuestions, errors, setErrors } =\n    useContext(GlobalStateContext);\n  const [loadingLocation, setLoadingLocation] = useState(false);\n  const inputRef = useRef(null);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: LOCALIZED?.GMAPS_API_KEY,\n    libraries,\n  });\n\n  useEffect(() => {\n    if (!inputRef.current || !window.google) return;\n\n    const autocomplete = new window.google.maps.places.Autocomplete(\n      inputRef.current,\n    );\n    const handlePlaceChanged = () => {\n      try {\n        const place = autocomplete.getPlace();\n        const addressObj = getAddressObject(place.address_components);\n        handleInputChange(addressObj);\n      } catch (error) {\n        console.error(\"Error handling place_changed event:\", error);\n      }\n    };\n\n    autocomplete.addListener(\"place_changed\", handlePlaceChanged);\n\n    return () => {\n      window.google.maps.event.clearInstanceListeners(autocomplete);\n    };\n  }, [isLoaded]);\n\n  const handleUseGps = () => {\n    if (!navigator.geolocation) {\n      console.error(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n\n    setLoadingLocation(true);\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        const { latitude, longitude } = pos.coords;\n        const geocoder = new window.google.maps.Geocoder();\n\n        geocoder.geocode(\n          { location: { lat: latitude, lng: longitude } },\n          (results, status) => {\n            setLoadingLocation(false);\n            if (status === \"OK\" && results[0]) {\n              const addressObj = getAddressObject(\n                results[0].address_components,\n              );\n              handleInputChange(addressObj);\n            } else {\n              console.error(\"Geocoder failed due to:\", status);\n            }\n          },\n        );\n      },\n      (err) => {\n        setLoadingLocation(false);\n        console.error(\"Error in getting geolocation:\", err);\n      },\n    );\n  };\n\n  const handleInputChange = (event) => {\n    try {\n      const updatedQuestions = [...questions];\n      const currentInput = updatedQuestions[currentQuestionIndex].inputs.find(\n        (input) => input.name === \"location\",\n      );\n\n      if (event.nativeEvent instanceof Event) {\n        currentInput.value = event.target.value;\n      } else {\n        currentInput.obj = event;\n        currentInput.value = `${event.address_1}, ${event.city}, ${event.state} ${event.zipcode}`;\n      }\n\n      setQuestions(updatedQuestions);\n\n      const errorMessage = validateLocation(currentInput);\n      setErrors({ ...errors, [currentInput.name]: errorMessage });\n    } catch (error) {\n      console.error(\"Error handling input change:\", error);\n    }\n  };\n\n  const validateLocation = (input) => {\n    if (!input.optional)\n      return !input.value.trim() ? \"This field is required\" : \"\";\n  };\n\n  if (loadError) {\n    console.error(\"Error loading maps:\", loadError);\n    return <div>Error loading maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <Suspense fallback={<LinearProgress />}>\n      <Stack spacing={2} direction=\"column\" sx={{ marginTop: \"1rem\" }}>\n        <TextField\n          label={input.label}\n          name={input.name}\n          value={input.value}\n          onChange={handleInputChange}\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          inputRef={inputRef}\n          InputProps={{\n            endAdornment: loadingLocation ? <LinearProgress /> : null,\n          }}\n          required={!input.optional}\n          error={!!errors[input.name]}\n          helperText={errors[input.name]}\n        />\n        <Button\n          variant=\"contained\"\n          aria-label=\"Use my location\"\n          color=\"primary\"\n          onClick={handleUseGps}\n          disabled={loadingLocation}\n        >\n          {loadingLocation ? <LinearProgress /> : <LocationIcon />}\n          Use My Current Location\n        </Button>\n      </Stack>\n    </Suspense>\n  );\n}\n","const FormControl = MaterialUI.FormControl;\nconst FormControlLabel = MaterialUI.FormControlLabel;\nconst FormGroup = MaterialUI.FormGroup;\nconst Checkbox = MaterialUI.Checkbox;\nconst Box = MaterialUI.Box;\nconst FormHelperText = MaterialUI.FormHelperText;\nconst FormLabel = MaterialUI.FormLabel;\nimport { useContext, useEffect, useState } from \"@wordpress/element\";\nimport { GlobalStateContext } from \"../state\";\n\nexport default function ServiceSelect({ input }) {\n  const {\n    questions,\n    currentQuestionIndex,\n    setQuestions,\n    services,\n    errors,\n    setErrors,\n  } = useContext(GlobalStateContext);\n\n  const [selectedServices, setSelectedServices] = useState([]);\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    setSelectedServices((prev) =>\n      checked ? [...prev, value] : prev.filter((service) => service !== value),\n    );\n  };\n\n  useEffect(() => {\n    const updatedQuestions = [...questions];\n    const currentInput = updatedQuestions[currentQuestionIndex].inputs.find(\n      (input) => input.name === \"service_type\",\n    );\n\n    const matchedServices = services.filter((service) =>\n      selectedServices.includes(service.value),\n    );\n    currentInput.value = matchedServices.map((service) => ({\n      value: service.value,\n      id: service.id,\n    }));\n\n    setQuestions(updatedQuestions);\n\n    const errorMessage = validateSelection(currentInput);\n    setErrors({ ...errors, [currentInput.name]: errorMessage });\n  }, [selectedServices]);\n\n  const validateSelection = (input) => {\n    if (!input.optional)\n      return input.value.length < 1 ? \"This field is required\" : \"\";\n  };\n\n  return (\n    <FormControl\n      component=\"fieldset\"\n      fullWidth\n      margin=\"dense\"\n      error={errors[\"service_type\"]}\n    >\n      <FormLabel component=\"legend\">Select desired service(s)</FormLabel>\n      <FormGroup>\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n            gap: 1,\n            padding: 0,\n          }}\n        >\n          {services.map((service) => (\n            <FormControlLabel\n              sx={{ margin: 0 }}\n              control={\n                <Checkbox\n                  value={service.value}\n                  checked={selectedServices.includes(service.value)}\n                  onChange={handleCheckboxChange}\n                  name={service.name}\n                  size=\"small\"\n                />\n              }\n              label={service.text}\n            />\n          ))}\n        </Box>\n      </FormGroup>\n      <FormHelperText>{errors[\"service_type\"]}</FormHelperText>\n    </FormControl>\n  );\n}\n","const TextField = MaterialUI.TextField;\nimport React, { useContext, useEffect } from \"@wordpress/element\";\nimport { GlobalStateContext } from \"../state\";\n\nexport default function PhoneField({ input, onChange }) {\n  const { errors, setErrors } = useContext(GlobalStateContext);\n  const formatPhoneNumber = (value) => {\n    const phoneNumber = value.replace(/\\D/g, \"\");\n\n    if (phoneNumber.length <= 3) {\n      return phoneNumber;\n    } else if (phoneNumber.length <= 6) {\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n    } else {\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (value) => {\n    const phoneNumber = value.replace(/\\D/g, \"\");\n    return phoneNumber.length !== 10 ? \"Valid phone number is required.\" : \"\";\n  };\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n    const formatted = formatPhoneNumber(value);\n    const errorMessage = validatePhoneNumber(formatted);\n    setErrors({ ...errors, [input?.name]: errorMessage });\n    onChange({ target: { name: \"phone\", value: formatted } });\n  };\n\n  useEffect(() => {\n    const errorMessage = validatePhoneNumber(input.value);\n    setErrors({ ...errors, [input.name]: errorMessage });\n  }, [input.value, setErrors, errors, input.name]);\n\n  return (\n    <TextField\n      label={input.label}\n      name={input.name}\n      value={input.value}\n      onChange={handleInputChange}\n      fullWidth\n      variant=\"outlined\"\n      margin=\"normal\"\n      type=\"tel\"\n      required={!input.optional}\n      error={!!errors[input.name]}\n      helperText={errors[input.name]}\n    />\n  );\n}\n","import { useContext, useEffect, useState } from \"@wordpress/element\";\nconst TextField = MaterialUI.TextField;\nconst Stack = MaterialUI.Stack;\nconst Checkbox = MaterialUI.Checkbox;\nconst FormControlLabel = MaterialUI.FormControlLabel;\nimport {\n  DatePicker,\n  TimePicker,\n  LocalizationProvider,\n} from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFnsV3\";\nimport { GlobalStateContext } from \"../state\";\nimport AddressAutoComplete from \"./AddressAutoComplete\";\nimport ServiceSelect from \"./ServiceSelect\";\nimport PhoneField from \"./PhoneField\";\nimport parse from \"html-react-parser\";\n\nconst Answer = ({ question }) => {\n  const { errors, setErrors } = useContext(GlobalStateContext);\n  const { questions, setQuestions, currentQuestionIndex } =\n    useContext(GlobalStateContext);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    if (questions) {\n      const updatedQuestions = [...questions];\n      const currentInput = updatedQuestions[currentQuestionIndex].inputs.find(\n        (input) => input.name === \"service_time\",\n      );\n      if (currentInput) {\n        currentInput.value = selectedDate;\n        setQuestions(updatedQuestions);\n      }\n    }\n  }, [question, selectedDate]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    const updatedQuestions = [...questions];\n    const currentInput = updatedQuestions[currentQuestionIndex].inputs.find(\n      (input) => input.name === name,\n    );\n    currentInput.value = type === \"checkbox\" ? checked : value;\n    setQuestions(updatedQuestions);\n\n    if (currentInput.type === \"text\" || currentInput.type === \"checkbox\") {\n      // Validate text input\n      const errorMessage = validateField(currentInput);\n      setErrors({ ...errors, [currentInput.name]: errorMessage });\n    }\n  };\n\n  const validateField = (input) => {\n    if (!input.optional) {\n      switch (input.type) {\n        case \"text\":\n          return !input.value.trim() ? \"This field is required\" : \"\";\n        case \"checkbox\":\n          return !input.value ? \"This field is required\" : \"\";\n        default:\n          return \"\";\n      }\n    }\n    return \"\";\n  };\n\n  return (\n    <>\n      {question.inputs.map((input, index) => {\n        if (input.type === \"tel\") {\n          return (\n            <PhoneField\n              input={input}\n              key={index}\n              onChange={handleInputChange}\n            />\n          );\n        }\n\n        if (input.type === \"text\") {\n          return (\n            <TextField\n              key={index}\n              label={input.label}\n              name={input.name}\n              value={input.value}\n              onChange={handleInputChange}\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              error={!!errors[input.name]}\n              helperText={errors[input.name]}\n              required={!input.optional}\n            />\n          );\n        }\n\n        if (input.type === \"geo\") {\n          return <AddressAutoComplete input={input} key={index} />;\n        }\n\n        if (input.type === \"select\") {\n          return <ServiceSelect input={input} key={index} />;\n        }\n\n        if (input.type === \"textarea\") {\n          return (\n            <TextField\n              key={index}\n              label={input.label}\n              name={input.name}\n              value={input.value}\n              onChange={handleInputChange}\n              fullWidth\n              multiline\n              rows={2}\n              required={!input.optional}\n              variant=\"outlined\"\n              margin=\"normal\"\n            />\n          );\n        }\n\n        if (input.type === \"checkbox\") {\n          return (\n            <FormControlLabel\n              sx={{ marginBottom: \"1rem\" }}\n              key={index}\n              control={\n                <Checkbox\n                  checked={input.value}\n                  onChange={handleInputChange}\n                  name={input.name}\n                  required={!input.optional}\n                />\n              }\n              label={parse(LOCALIZED.SMS_CONTENT_MESSAGE || input.label)}\n            />\n          );\n        }\n\n        if (input.type === \"datetime\") {\n          return (\n            <LocalizationProvider dateAdapter={AdapterDateFns} key={index}>\n              <Stack direction=\"row\" spacing={2} sx={{ marginTop: \"1rem\" }}>\n                <DatePicker\n                  label=\"Select Date\"\n                  value={selectedDate}\n                  onChange={handleDateChange}\n                  disablePast\n                  fullWidth\n                />\n                <TimePicker\n                  label=\"Select Time\"\n                  value={selectedDate}\n                  onChange={handleDateChange}\n                  fullWidth\n                />\n              </Stack>\n            </LocalizationProvider>\n          );\n        }\n\n        return null;\n      })}\n    </>\n  );\n};\n\nexport default Answer;\n","const Button = MaterialUI.Button;\nconst Card = MaterialUI.Card;\nconst CardContent = MaterialUI.CardContent;\nconst Stack = MaterialUI.Stack;\nconst Box = MaterialUI.Box;\nconst CardHeader = MaterialUI.CardHeader;\nconst Cancel = () => (\n  <svg\n    className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-1iirmgg\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"CancelIcon\"\n  >\n    <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"></path>\n  </svg>\n);\nconst LinearProgress = MaterialUI.LinearProgress;\nimport Prompt from \"./Prompt\";\nimport Answer from \"./Answer\";\nimport Disclaimer from \"./Disclaimer\";\nimport { useContext, useEffect, useState } from \"@wordpress/element\";\nimport { GlobalStateContext } from \"../state\";\n\nconst ConversationalForm = () => {\n  const {\n    questions,\n    currentQuestionIndex,\n    setCurrentQuestionIndex,\n    loading,\n    setLoading,\n    submitted,\n    setSubmitted,\n    isFormVisible,\n    setIsFormVisible,\n    errors,\n  } = useContext(GlobalStateContext);\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  const [invalid, setInvalid] = useState(true);\n  const [formStarted, setFormStarted] = useState(false);\n  const [formSubmissionId, setFormSubmissionId] = useState(null);\n  const [turnstileToken, setTurnstileToken] = useState(null);\n\n  useEffect(() => {\n    const hasErrors = currentQuestion.inputs.some(\n      (input) => errors[input.name],\n    );\n    setInvalid(hasErrors);\n\n    return () => {\n      setInvalid(true);\n    };\n  }, [errors]);\n\n  useEffect(() => {\n    if (isFormVisible && window.turnstile) {\n      const id = window.turnstile.render(\"#conversation-turnstile-widget\", {\n        sitekey: LOCALIZED.TURNSTILE_SITE_KEY,\n        callback: (token) => {\n          setTurnstileToken(token);\n        },\n        \"expired-callback\": () => {\n          window.turnstile.reset(id);\n        },\n      });\n    }\n  }, [isFormVisible]);\n\n  const toggleFormVisibility = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    const submission = questions.flatMap((question) =>\n      question.inputs.map((input) => {\n        const { name, value, obj } = input;\n        return obj ? { name, value, obj } : { name, value };\n      }),\n    );\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"X-Turnstile-Token\": turnstileToken,\n    };\n    const source =\n      window.location.origin.replace(/^https?:\\/\\//, \"\") +\n      window.location.pathname.replace(/\\/$/, \"\");\n\n    if (currentQuestionIndex + 1 === questions.length) {\n      return await completeSubmission(submission, source);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n\n    if (!formStarted) {\n      setFormStarted(true);\n      if (window?.dataLayer) {\n        window.dataLayer.push({\n          event: \"form_start\",\n        });\n      }\n    }\n\n    try {\n      if (!turnstileToken) {\n        return false;\n      }\n\n      if (formSubmissionId) {\n        await fetch(\n          `${LOCALIZED.API_URL}/submit-lead-form/${formSubmissionId}`,\n          {\n            method: \"PUT\",\n            headers,\n            body: JSON.stringify({ submission, source }),\n          },\n        );\n      } else {\n        const response = await fetch(`${LOCALIZED.API_URL}/submit-lead-form`, {\n          method: \"POST\",\n          headers,\n          body: JSON.stringify({ submission, source }),\n        });\n\n        const result = await response.json();\n        if (result?.id) {\n          setFormSubmissionId(result?.id);\n        }\n      }\n    } catch (error) {\n      console.error(\"There was an error\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const completeSubmission = async (submission, source) => {\n    try {\n      setLoading(true);\n      if (formSubmissionId) {\n        await fetch(\n          `${LOCALIZED.API_URL}/submit-lead-form/${formSubmissionId}`,\n          {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"X-Turnstile-Token\": turnstileToken,\n            },\n            body: JSON.stringify({\n              submission,\n              completed: true,\n              source,\n            }),\n          },\n        );\n      }\n\n      if (window?.dataLayer) {\n        window.dataLayer.push({\n          event: \"form_submit\",\n          submission,\n          source,\n          completed: true,\n        });\n      }\n\n      setSubmitted(true);\n    } catch (error) {\n      console.error(\"There was an error\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <section>\n      <button\n        onClick={toggleFormVisibility}\n        id=\"phoenix-show-form-button\"\n        aria-label=\"Show Lead Form\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"e-font-icon-svg e-fas-comment-alt\"\n          viewBox=\"0 0 512 512\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"#fff\"\n        >\n          <path d=\"M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 9.8 11.2 15.5 19.1 9.7L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z\" />\n        </svg>\n      </button>\n\n      {isFormVisible && (\n        <Card className=\"phoenix-form\">\n          <CardHeader\n            action={\n              <Button onClick={toggleFormVisibility} aria-label=\"close\">\n                <Cancel />\n              </Button>\n            }\n          />\n\n          <>\n            {submitted && (\n              <CardContent>\n                <Stack space={2}>\n                  <Prompt\n                    question={{\n                      prompt: LOCALIZED.SUBMISSION_MESSAGE,\n                    }}\n                  />\n                </Stack>\n              </CardContent>\n            )}\n\n            {!submitted && (\n              <>\n                <CardContent>\n                  <Stack space={2}>\n                    <Prompt question={currentQuestion} />\n                    <Answer question={currentQuestion} />\n                  </Stack>\n                  <Stack\n                    direction=\"row\"\n                    spacing={2}\n                    sx={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      my: \"1rem\",\n                      justifyContent:\n                        currentQuestionIndex > 0 ? \"space-between\" : \"flex-end\",\n                    }}\n                  >\n                    {currentQuestionIndex > 0 && (\n                      <Button\n                        variant=\"contained\"\n                        onClick={() =>\n                          setCurrentQuestionIndex(currentQuestionIndex - 1)\n                        }\n                      >\n                        Back\n                      </Button>\n                    )}\n\n                    <Button\n                      sx={{ justifySelf: \"end\" }}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => {\n                        handleSubmit();\n                      }}\n                      disabled={invalid || loading || !turnstileToken}\n                    >\n                      {currentQuestionIndex + 1 === questions.length\n                        ? \"Submit\"\n                        : \"Next\"}\n                    </Button>\n                  </Stack>\n                  <Disclaimer index={currentQuestionIndex} />\n                  <Box\n                    spacing={2}\n                    className={\"phoenix-no-select\"}\n                    sx={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      my: \"1rem\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      minHeight: \"1rem\",\n                    }}\n                  >\n                    {(loading || !turnstileToken) && (\n                      <LinearProgress sx={{ width: \"100%\" }} />\n                    )}\n                  </Box>\n                </CardContent>\n              </>\n            )}\n          </>\n\n          <div\n            id=\"conversation-turnstile-widget\"\n            className=\"cf-turnstile\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              margin: \"1rem 0\",\n              padding: \"1rem\",\n            }}\n            data-sitekey={LOCALIZED.TURNSTILE_SITE_KEY}\n          ></div>\n        </Card>\n      )}\n    </section>\n  );\n};\n\nexport default ConversationalForm;\n","const Alert = MaterialUI.Alert;\nimport parse from \"html-react-parser\";\n\nconst Disclaimer = ({ index }) => {\n  return (\n    index === 0 && (\n      <>\n        {LOCALIZED.DISCLAIMER_MESSAGE && (\n          <Alert severity=\"info\" sx={{ padding: \"1rem\" }}>\n            {parse(LOCALIZED.DISCLAIMER_MESSAGE)}\n          </Alert>\n        )}\n      </>\n    )\n  );\n};\n\nexport default Disclaimer;\n","export default function LocationOnIcon() {\n  return (\n    <svg\n      style={{\n        width: \"20px\",\n        height: \"20px\",\n        marginRight: \"0.5rem\",\n        fill: \"white\",\n      }}\n      className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-1iirmgg\"\n      focusable=\"false\"\n      aria-hidden=\"true\"\n      viewBox=\"0 0 24 24\"\n      data-testid=\"MyLocationIcon\"\n    >\n      <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7\"></path>\n    </svg>\n  );\n}\n","const StyledCardContent = MaterialUI.CardContent;\nconst SpeechBubble = (props) => (\n  <StyledCardContent\n    sx={{\n      backgroundColor: \"#f0f0f0\",\n      borderRadius: \"20px\",\n      padding: \"10px 15px\",\n      position: \"relative\",\n      maxWidth: \"80%\",\n    }}\n    {...props}\n  />\n);\n\nexport default SpeechBubble;\n","const Avatar = MaterialUI.Avatar;\nconst Stack = MaterialUI.Stack;\nimport parse from \"html-react-parser\";\nimport SpeechBubble from \"./SpeechBubble\";\n\nconst Prompt = ({ question }) => {\n  const assets = LOCALIZED?.ASSETS_URL ?? \"\";\n  return (\n    <Stack direction=\"row\" spacing={2} alignItems=\"flex-start\">\n      <Avatar src={`${assets}/avatar.jpg`} alt=\"Technician Avatar\" />\n      <SpeechBubble>\n        <label>{parse(question.prompt)}</label>\n      </SpeechBubble>\n    </Stack>\n  );\n};\n\nexport default Prompt;\n"],"names":["GlobalStateContext","TextField","MaterialUI","LinearProgress","Stack","Button","getAddressObject","address_components","obj","number","find","c","types","includes","long_name","street","short_name","address_1","city","state","country","zipcode","libraries","AddressAutoComplete","input","questions","currentQuestionIndex","setQuestions","errors","setErrors","useContext","loadingLocation","setLoadingLocation","useState","inputRef","useRef","isLoaded","loadError","useLoadScript","googleMapsApiKey","LOCALIZED","GMAPS_API_KEY","useEffect","current","window","google","autocomplete","maps","places","Autocomplete","addListener","handlePlaceChanged","place","getPlace","addressObj","handleInputChange","error","console","event","clearInstanceListeners","updatedQuestions","currentInput","inputs","name","nativeEvent","Event","value","target","errorMessage","validateLocation","optional","trim","createElement","Suspense","fallback","spacing","direction","sx","marginTop","label","onChange","variant","margin","fullWidth","InputProps","endAdornment","required","helperText","color","onClick","handleUseGps","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","Geocoder","geocode","location","lat","lng","results","status","err","disabled","LocationIcon","FormControl","FormControlLabel","FormGroup","Checkbox","Box","FormHelperText","FormLabel","ServiceSelect","services","selectedServices","setSelectedServices","handleCheckboxChange","checked","prev","filter","service","matchedServices","map","id","validateSelection","length","component","display","gridTemplateColumns","gap","padding","control","size","text","PhoneField","validatePhoneNumber","replace","formatted","phoneNumber","slice","formatPhoneNumber","type","Answer","question","selectedDate","setSelectedDate","Date","handleDateChange","date","validateField","Fragment","index","key","multiline","rows","marginBottom","parse","SMS_CONTENT_MESSAGE","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","disablePast","TimePicker","Card","CardContent","CardHeader","Cancel","className","focusable","viewBox","d","ConversationalForm","setCurrentQuestionIndex","loading","setLoading","submitted","setSubmitted","isFormVisible","setIsFormVisible","currentQuestion","invalid","setInvalid","formStarted","setFormStarted","formSubmissionId","setFormSubmissionId","turnstileToken","setTurnstileToken","hasErrors","some","turnstile","render","sitekey","TURNSTILE_SITE_KEY","callback","token","expired-callback","reset","toggleFormVisibility","xmlns","width","height","fill","action","space","Prompt","prompt","SUBMISSION_MESSAGE","my","justifyContent","justifySelf","async","submission","flatMap","headers","source","origin","pathname","fetch","API_URL","method","body","JSON","stringify","completed","dataLayer","push","completeSubmission","response","result","json","handleSubmit","Disclaimer","alignItems","minHeight","style","Alert","DISCLAIMER_MESSAGE","severity","LocationOnIcon","marginRight","StyledCardContent","props","backgroundColor","borderRadius","position","maxWidth","Avatar","_LOCALIZED$ASSETS_URL","assets","ASSETS_URL","src","alt","SpeechBubble"],"sourceRoot":""}