{"version":3,"file":"73.9bb74a9e836a3642674b.js","mappings":"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","sources":["webpack://phoenix-press/./src/components/Disclaimer.jsx","webpack://phoenix-press/./src/utils/embed-form-data.js","webpack://phoenix-press/./src/utils/validation.js","webpack://phoenix-press/./src/components/EmbedForm/AddressAutoComplete.jsx","webpack://phoenix-press/./src/components/EmbedForm/PhoneField.jsx","webpack://phoenix-press/./src/components/EmbedForm/Services.jsx","webpack://phoenix-press/./src/components/InputField.jsx","webpack://phoenix-press/./src/components/EmbedForm.jsx","webpack://phoenix-press/./src/components/LocationIcon.jsx","webpack://phoenix-press/./src/components/SpeechBubble.jsx","webpack://phoenix-press/./src/components/Prompt.jsx"],"sourcesContent":["const Alert = MaterialUI.Alert;\nimport parse from \"html-react-parser\";\n\nconst Disclaimer = ({ index }) => {\n  return (\n    index === 0 && (\n      <>\n        {LOCALIZED.DISCLAIMER_MESSAGE && (\n          <Alert severity=\"info\" sx={{ padding: \"1rem\" }}>\n            {parse(LOCALIZED.DISCLAIMER_MESSAGE)}\n          </Alert>\n        )}\n      </>\n    )\n  );\n};\n\nexport default Disclaimer;\n","const options = [\n\t{\n\t\tname: 'full_name',\n\t\ttype: 'row',\n\t\ttitle: 'Contact Information',\n\t\tlabel: 'Please enter your contact information.',\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: 'full_name',\n\t\t\t\ttype: 'text',\n\t\t\t\tlabel: 'Enter your name',\n\t\t\t\tvalue: '',\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: 'phone',\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: 'phone',\n\t\t\t\ttype: 'tel',\n\t\t\t\tlabel: 'Enter your phone number',\n\t\t\t\tvalue: '',\n\t\t\t\toptional: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'sms_consent',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tlabel: 'Yes, send me SMS updates and notifications to keep me informed about my roadside service request.',\n\t\t\t\tvalue: false,\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: 'service_time',\n\t\ttype: 'row',\n\t\ttitle: 'When do you need service?',\n\t\tlabel: 'Please verify service date and time.',\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\ttype: 'datetime',\n\t\t\t\tname: 'service_time',\n\t\t\t\tselected: '',\n\t\t\t\toptional: false,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: 'location',\n\t\ttype: 'row',\n\t\ttitle: 'Where is the vehicle located?',\n\t\tlabel: 'Please verify service location.',\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: 'location',\n\t\t\t\ttype: 'geo',\n\t\t\t\tlabel: 'Search for your location',\n\t\t\t\tvalue: '',\n\t\t\t\tobj: {},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\ttype: 'row',\n\t\ttitle: 'Vehicle Details',\n\t\tlabel: 'Year, Make, Model, and Color',\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: 'car_year',\n\t\t\t\ttype: 'text',\n\t\t\t\tlabel: 'Year',\n\t\t\t\tvalue: '',\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'car_make',\n\t\t\t\ttype: 'text',\n\t\t\t\tlabel: 'Make',\n\t\t\t\tvalue: '',\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'car_model',\n\t\t\t\ttype: 'text',\n\t\t\t\tlabel: 'Model',\n\t\t\t\tvalue: '',\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'car_color',\n\t\t\t\ttype: 'text',\n\t\t\t\tlabel: 'Color',\n\t\t\t\tvalue: '',\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: 'service_type',\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tvalue: [],\n\t\t\t\tvalueId: null,\n\t\t\t\ttype: 'select',\n\t\t\t\tname: 'service_type',\n\t\t\t\toptionsKey: 'serviceOptions',\n\t\t\t\toptions: [],\n\t\t\t\toptional: false,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tname: 'notes',\n\t\t\t\ttype: 'text',\n\t\t\t\tlabel: 'Additional Information',\n\t\t\t\tvalue: '',\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport default options;\n","const requiredFields = [\n\t'full_name',\n\t'phone',\n\t'service_time',\n\t'location',\n\t'service_type',\n];\n\nconst validateField = (field, submission) => {\n\tconst fieldData = submission.find((item) => item.name === field);\n\treturn fieldData && validationRules[field](fieldData.value);\n};\n\nconst isSubmissionComplete = (submission, requiredFields) => {\n\treturn requiredFields.every((field) => validateField(field, submission));\n};\n\nconst validationRules = {\n\tfull_name: (value) => {\n\t\treturn value.trim() !== '';\n\t},\n\tphone: (value) => {\n\t\treturn value.trim() !== '';\n\t},\n\tservice_time: (value) => {\n\t\treturn !isNaN(new Date(value).getTime());\n\t},\n\tlocation: (value) => {\n\t\treturn value.trim() !== '';\n\t},\n\tservice_type: (value) => {\n\t\treturn Array.isArray(value) && value.length > 0;\n\t},\n};\n\nexport { requiredFields, validateField, isSubmissionComplete, validationRules };\n","import { useState, useEffect, useRef } from \"@wordpress/element\";\nconst TextField = MaterialUI.TextField;\nconst Stack = MaterialUI.Stack;\nconst Button = MaterialUI.Button;\nconst CircularProgress = MaterialUI.CircularProgress;\nconst LinearProgress = MaterialUI.LinearProgress;\nimport LocationIcon from \"../LocationIcon\";\nimport { useLoadScript } from \"@react-google-maps/api\";\n\nconst getAddressObject = (address_components) => {\n  const obj = {};\n  if (!address_components) return obj;\n\n  const number = address_components.find((c) =>\n    c.types.includes(\"street_number\"),\n  )?.long_name;\n  const street = address_components.find((c) =>\n    c.types.includes(\"route\"),\n  )?.short_name;\n\n  obj.address_1 = number && street ? `${number} ${street}` : \"\";\n  obj.city =\n    address_components.find((c) => c.types.includes(\"locality\"))?.long_name ||\n    \"\";\n  obj.state =\n    address_components.find((c) =>\n      c.types.includes(\"administrative_area_level_1\"),\n    )?.short_name || \"\";\n  obj.country =\n    address_components.find((c) => c.types.includes(\"country\"))?.short_name ||\n    \"\";\n  obj.zipcode =\n    address_components.find((c) => c.types.includes(\"postal_code\"))\n      ?.long_name || \"\";\n\n  return obj;\n};\n\nconst libraries = [\"places\"];\n\nexport default function AddressAutoComplete({ input, handleBlur }) {\n  const [loadingLocation, setLoadingLocation] = useState(false);\n  const [errors, setErrors] = useState({});\n  const inputRef = useRef(null);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: LOCALIZED?.GMAPS_API_KEY,\n    libraries,\n  });\n\n  useEffect(() => {\n    if (!inputRef.current || !window.google) return;\n\n    const autocomplete = new window.google.maps.places.Autocomplete(\n      inputRef.current,\n    );\n    const handlePlaceChanged = () => {\n      try {\n        const place = autocomplete.getPlace();\n        const addressObj = getAddressObject(place.address_components);\n        handleInputChange(addressObj);\n      } catch (error) {\n        console.error(\"Error handling place_changed event:\", error);\n      }\n    };\n\n    autocomplete.addListener(\"place_changed\", handlePlaceChanged);\n\n    return () => {\n      window.google.maps.event.clearInstanceListeners(autocomplete);\n    };\n  }, [isLoaded]);\n\n  const handleUseGps = () => {\n    if (!navigator.geolocation) {\n      console.error(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n\n    setLoadingLocation(true);\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        const { latitude, longitude } = pos.coords;\n        const geocoder = new window.google.maps.Geocoder();\n\n        geocoder.geocode(\n          { location: { lat: latitude, lng: longitude } },\n          (results, status) => {\n            setLoadingLocation(false);\n            if (status === \"OK\" && results[0]) {\n              const addressObj = getAddressObject(\n                results[0].address_components,\n              );\n              handleInputChange(addressObj);\n              handleBlur();\n            } else {\n              console.error(\"Geocoder failed due to:\", status);\n            }\n          },\n        );\n      },\n      (err) => {\n        setLoadingLocation(false);\n        console.error(\"Error in getting geolocation:\", err);\n      },\n    );\n  };\n\n  const handleInputChange = (event) => {\n    if (event.nativeEvent instanceof Event) {\n      input.value = event.target.value;\n    } else {\n      input.obj = event;\n      input.value = `${event.address_1}, ${event.city}, ${event.state} ${event.zipcode}`;\n    }\n\n    const errorMessage = validateLocation(input);\n    setErrors((prevErrors) => ({ ...prevErrors, [input.name]: errorMessage }));\n  };\n\n  const validateLocation = (input) => {\n    if (!input.optional)\n      return !input.value.trim() ? \"This field is required\" : \"\";\n  };\n\n  if (loadError) {\n    console.error(\"Error loading maps:\", loadError);\n    return <div>Error loading maps</div>;\n  }\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <Stack\n      spacing={2}\n      direction=\"column\"\n      sx={{ marginTop: \"1rem\", display: \"flex\", width: \"100%\" }}\n    >\n      <TextField\n        label={input.label}\n        name={input.name}\n        value={input.value}\n        onChange={handleInputChange}\n        onBlur={handleBlur}\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n        inputRef={inputRef}\n        InputProps={{\n          endAdornment: loadingLocation ? <CircularProgress size={20} /> : null,\n        }}\n        required={!input.optional}\n        error={!!errors[input.name]}\n        helperText={errors[input.name]}\n      />\n      <Button\n        variant=\"contained\"\n        aria-label=\"Use my location\"\n        color=\"primary\"\n        onClick={handleUseGps}\n        disabled={loadingLocation}\n      >\n        {loadingLocation ? <CircularProgress size={20} /> : <LocationIcon />}\n        Use My Current Location\n      </Button>\n    </Stack>\n  );\n}\n","import { useState } from \"@wordpress/element\";\nconst TextField = MaterialUI.TextField;\n\nexport default function PhoneField({ input, setValidPhoneNumber, handleBlur }) {\n  const [errors, setErrors] = useState({});\n  const formatPhoneNumber = (value) => {\n    const phoneNumber = value.replace(/\\D/g, \"\");\n\n    if (phoneNumber.length <= 3) {\n      return phoneNumber;\n    } else if (phoneNumber.length <= 6) {\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n    } else {\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n    }\n  };\n\n  // Function to validate phone number\n  const validatePhoneNumber = (value) => {\n    const phoneNumber = value.replace(/\\D/g, \"\");\n    const valid = phoneNumber.length !== 10;\n    setValidPhoneNumber(true);\n    return valid ? \"Valid phone number is required.\" : \"\";\n  };\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n    const formatted = formatPhoneNumber(value);\n    const errorMessage = validatePhoneNumber(formatted);\n    setErrors({ ...errors, [input.name]: errorMessage });\n    input.value = formatted;\n  };\n\n  return (\n    <TextField\n      label={input.label}\n      name={input.name}\n      value={input.value}\n      onChange={handleInputChange}\n      onBlur={handleBlur}\n      fullWidth\n      variant=\"outlined\"\n      margin=\"normal\"\n      type=\"tel\"\n      required={!input.optional}\n      error={!!errors[input.name]}\n      helperText={errors[input.name]}\n    />\n  );\n}\n","import { useEffect, useState } from \"@wordpress/element\";\nconst FormControl = MaterialUI.FormControl;\nconst FormControlLabel = MaterialUI.FormControlLabel;\nconst FormGroup = MaterialUI.FormGroup;\nconst Checkbox = MaterialUI.Checkbox;\nconst Box = MaterialUI.Box;\nconst FormLabel = MaterialUI.FormLabel;\nimport services from \"../../utils/services\";\n\nexport default function Services({ input, handleBlur }) {\n  const [selectedServices, setSelectedServices] = useState([]);\n\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    setSelectedServices((prev) =>\n      checked ? [...prev, value] : prev.filter((service) => service !== value),\n    );\n    handleBlur();\n  };\n\n  useEffect(() => {\n    if (services && selectedServices.length > 0) {\n      const matchedServices = services.filter((service) =>\n        selectedServices.includes(service.value),\n      );\n      input.value = matchedServices.map((service) => ({\n        value: service.value,\n        id: service.id,\n      }));\n    }\n  }, [selectedServices]);\n\n  return (\n    <FormControl component=\"fieldset\" fullWidth margin=\"dense\">\n      <FormLabel component=\"legend\">Select desired service(s)</FormLabel>\n      <FormGroup>\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n            gap: 1,\n            padding: 0,\n          }}\n        >\n          {services &&\n            services?.map((service) => (\n              <FormControlLabel\n                sx={{ margin: 0 }}\n                control={\n                  <Checkbox\n                    value={service.value}\n                    checked={selectedServices.includes(service.value)}\n                    onChange={handleCheckboxChange}\n                    name={service.name}\n                    size=\"small\"\n                  />\n                }\n                label={service.text}\n              />\n            ))}\n        </Box>\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import { useEffect } from \"@wordpress/element\";\nimport {\n  DatePicker,\n  TimePicker,\n  LocalizationProvider,\n} from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFnsV3\";\nimport AddressAutoComplete from \"./EmbedForm/AddressAutoComplete\";\nimport PhoneField from \"./EmbedForm/PhoneField\";\nimport Services from \"./EmbedForm/Services\";\nconst TextField = MaterialUI.TextField;\nconst FormControlLabel = MaterialUI.FormControlLabel;\nconst Checkbox = MaterialUI.Checkbox;\nconst Stack = MaterialUI.Stack;\nimport parse from \"html-react-parser\";\n\nconst InputField = ({\n  input,\n  handleTextChange,\n  handleDateChange,\n  handleConsentChange,\n  selectedDate,\n  setValidPhoneNumber,\n  checked,\n  handleBlur,\n}) => {\n  useEffect(() => {\n    if (input.type === \"datetime\") {\n      handleDateChange({ input, event: selectedDate });\n    }\n    return () => {\n      // Cleanup if necessary\n    };\n  }, [input, selectedDate, handleDateChange]);\n\n  switch (input.type) {\n    case \"tel\":\n      return (\n        <PhoneField\n          input={input}\n          setValidPhoneNumber={setValidPhoneNumber}\n          handleBlur={handleBlur}\n        />\n      );\n    case \"text\":\n      return (\n        <TextField\n          label={input.label}\n          name={input.name}\n          onChange={(event) => handleTextChange({ input, event })}\n          onBlur={handleBlur}\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={!input.optional}\n        />\n      );\n    case \"geo\":\n      return <AddressAutoComplete input={input} handleBlur={handleBlur} />;\n    case \"select\":\n      return <Services input={input} handleBlur={handleBlur} />;\n    case \"checkbox\":\n      return (\n        <FormControlLabel\n          sx={{ marginBottom: \"1rem\" }}\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={(event) => handleConsentChange({ input, event })}\n              onBlur={handleBlur}\n              name={input.name}\n              required={!input.optional}\n            />\n          }\n          label={parse(LOCALIZED.SMS_CONSENT_MESSAGE || input.label)}\n        />\n      );\n    case \"datetime\":\n      return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Stack\n            direction=\"row\"\n            spacing={4}\n            sx={{\n              marginTop: \"1rem\",\n              justifyContent: \"space-around\",\n              width: \"100%\",\n            }}\n          >\n            <DatePicker\n              label=\"Select Date\"\n              value={selectedDate}\n              onChange={(event) => handleDateChange({ input, event })}\n              onAccept={handleBlur}\n              disablePast\n              fullWidth\n            />\n            <TimePicker\n              label=\"Select Time\"\n              value={selectedDate}\n              onChange={(event) => handleDateChange({ input, event })}\n              onAccept={handleBlur}\n              fullWidth\n            />\n          </Stack>\n        </LocalizationProvider>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default InputField;\n","import { useEffect, useState, Suspense } from \"@wordpress/element\";\nimport questionData from \"../utils/embed-form-data.js\";\nimport { requiredFields, isSubmissionComplete } from \"../utils/validation\";\nconst Box = MaterialUI.Box;\nconst Button = MaterialUI.Button;\nconst Card = MaterialUI.Card;\nconst CardContent = MaterialUI.CardContent;\nconst CardActions = MaterialUI.CardActions;\nconst Stack = MaterialUI.Stack;\nconst Typography = MaterialUI.Typography;\nconst LinearProgress = MaterialUI.LinearProgress;\nconst CardHeader = MaterialUI.CardHeader;\nimport Prompt from \"./Prompt\";\nimport InputField from \"./InputField\";\nimport Disclaimer from \"./Disclaimer\";\nimport \"../styles.css\";\n\nexport default function EmbedForm() {\n  const [questions] = useState(questionData || false);\n  const [validPhoneNumber, setValidPhoneNumber] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [formStarted, setFormStarted] = useState(false);\n  const [formSubmissionId, setFormSubmissionId] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [checked, setChecked] = useState(false);\n  const [turnstileToken, setTurnstileToken] = useState(null);\n\n  useEffect(() => {\n    let id;\n    if (window.turnstile) {\n      id = window.turnstile.render(\"#turnstile-widget\", {\n        sitekey: LOCALIZED.TURNSTILE_SITE_KEY,\n        callback: (token) => {\n          setTurnstileToken(token);\n        },\n        \"expired-callback\": () => {\n          window.turnstile.reset(id);\n        },\n      });\n    }\n    return () => {\n      if (id) {\n        window.turnstile.remove(id);\n      }\n    };\n  }, []);\n\n  const handleSubmit = async (submit = false) => {\n    if (!turnstileToken && !validPhoneNumber) return false;\n\n    setLoading(true);\n    const submission = questions.flatMap((question) =>\n      question.inputs.map((input) => {\n        const { name, value, obj } = input;\n        return obj ? { name, value, obj } : { name, value };\n      }),\n    );\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"X-Turnstile-Token\": turnstileToken,\n    };\n\n    const source =\n      window.location.origin.replace(/^https?:\\/\\//, \"\") +\n      window.location.pathname.replace(/\\/$/, \"\");\n\n    try {\n      const completed = isSubmissionComplete(submission, requiredFields);\n\n      if (formSubmissionId) {\n        await fetch(\n          `${LOCALIZED.API_URL}/submit-lead-form/${formSubmissionId}`,\n          {\n            method: \"PUT\",\n            headers,\n            body: JSON.stringify({ submission, source, completed }),\n          },\n        );\n      } else {\n        if (!formStarted) {\n          setFormStarted(true);\n          if (window?.dataLayer) {\n            window.dataLayer.push({\n              event: \"form_start\",\n            });\n          }\n        }\n\n        const response = await fetch(`${LOCALIZED.API_URL}/submit-lead-form`, {\n          method: \"POST\",\n          headers,\n          body: JSON.stringify({ submission, source, completed }),\n        });\n\n        const result = await response.json();\n        if (result?.id) {\n          setFormSubmissionId(result?.id);\n        }\n      }\n\n      if (submit) {\n        setSubmitted(true);\n      }\n    } catch (error) {\n      console.error(\"There was an error\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTextChange = ({ input, event }) => {\n    input.value = event?.target?.value;\n  };\n\n  const handleDateChange = ({ input, event }) => {\n    input.value = event;\n    setSelectedDate(event);\n  };\n\n  const handleBlur = (submit = false) => {\n    if (validPhoneNumber && turnstileToken) {\n      void handleSubmit(submit);\n    }\n  };\n\n  const handleConsentChange = ({ input, event }) => {\n    const { checked } = event?.target;\n    input.value = checked;\n    setChecked(checked);\n    handleBlur();\n  };\n\n  return (\n    <section>\n      <Suspense fallback={<LinearProgress />}>\n        <Card className=\"phoenix-form\">\n          {LOCALIZED.FORM_TITLE && (\n            <CardHeader\n              title={LOCALIZED.FORM_TITLE}\n              subheader={LOCALIZED.FORM_SUBTITLE}\n            />\n          )}\n          {submitted ? (\n            <CardContent>\n              <Stack space={2}>\n                <Prompt\n                  question={{\n                    prompt: LOCALIZED.SUBMISSION_MESSAGE,\n                  }}\n                />\n              </Stack>\n            </CardContent>\n          ) : (\n            <form aria-label=\"Form Description\" autoComplete=\"on\" noValidate>\n              <CardContent>\n                <Stack space={4}>\n                  {questions?.map((question, index) => (\n                    <React.Fragment key={index}>\n                      {question.type === \"row\" ? (\n                        <>\n                          <Typography\n                            variant=\"subtitle1\"\n                            sx={{ mt: \"1rem\" }}\n                            color=\"textSecondary\"\n                          >\n                            {question.title}\n                            <Typography\n                              variant=\"subtitle2\"\n                              color=\"textSecondary\"\n                            >\n                              {question.label}\n                            </Typography>\n                          </Typography>\n                          <Box\n                            display=\"flex\"\n                            flexDirection=\"row\"\n                            sx={{ width: \"100%\" }}\n                            gap={2}\n                          >\n                            {question.inputs.map((input, index) => (\n                              <InputField\n                                key={index}\n                                input={input}\n                                handleTextChange={handleTextChange}\n                                handleDateChange={handleDateChange}\n                                handleConsentChange={handleConsentChange}\n                                selectedDate={selectedDate}\n                                setValidPhoneNumber={setValidPhoneNumber}\n                                checked={checked}\n                                setChecked={setChecked}\n                                handleBlur={handleBlur}\n                              />\n                            ))}\n                          </Box>\n                        </>\n                      ) : (\n                        question.inputs.map((input, index) => (\n                          <InputField\n                            key={index}\n                            input={input}\n                            handleTextChange={handleTextChange}\n                            handleDateChange={handleDateChange}\n                            handleConsentChange={handleConsentChange}\n                            selectedDate={selectedDate}\n                            setValidPhoneNumber={setValidPhoneNumber}\n                            checked={checked}\n                            setChecked={setChecked}\n                            handleBlur={handleBlur}\n                          />\n                        ))\n                      )}\n                    </React.Fragment>\n                  ))}\n                </Stack>\n                <Box>\n                  <Disclaimer index={0} />\n                </Box>\n\n                {loading && <LinearProgress />}\n              </CardContent>\n\n              <CardActions sx={{ justifyContent: \"end\" }}>\n                <Button\n                  size={\"large\"}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    handleBlur(true);\n                  }}\n                  disabled={loading || !validPhoneNumber || !turnstileToken}\n                >\n                  Submit\n                </Button>\n              </CardActions>\n              <div\n                id=\"turnstile-widget\"\n                className=\"cf-turnstile\"\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  margin: \"1rem 0\",\n                  padding: \"1rem\",\n                }}\n                data-sitekey={LOCALIZED.TURNSTILE_SITE_KEY}\n              ></div>\n            </form>\n          )}\n        </Card>\n      </Suspense>\n    </section>\n  );\n}\n","export default function LocationOnIcon() {\n  return (\n    <svg\n      style={{\n        width: \"20px\",\n        height: \"20px\",\n        marginRight: \"0.5rem\",\n        fill: \"white\",\n      }}\n      className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-1iirmgg\"\n      focusable=\"false\"\n      aria-hidden=\"true\"\n      viewBox=\"0 0 24 24\"\n      data-testid=\"MyLocationIcon\"\n    >\n      <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7\"></path>\n    </svg>\n  );\n}\n","const StyledCardContent = MaterialUI.CardContent;\nconst SpeechBubble = (props) => (\n  <StyledCardContent\n    sx={{\n      backgroundColor: \"#f0f0f0\",\n      borderRadius: \"20px\",\n      padding: \"10px 15px\",\n      position: \"relative\",\n      maxWidth: \"80%\",\n    }}\n    {...props}\n  />\n);\n\nexport default SpeechBubble;\n","const Avatar = MaterialUI.Avatar;\nconst Stack = MaterialUI.Stack;\nimport parse from \"html-react-parser\";\nimport SpeechBubble from \"./SpeechBubble\";\n\nconst Prompt = ({ question }) => {\n  const assets = LOCALIZED?.ASSETS_URL ?? \"\";\n  return (\n    <Stack direction=\"row\" spacing={2} alignItems=\"flex-start\">\n      <Avatar src={`${assets}/avatar.jpg`} alt=\"Technician Avatar\" />\n      <SpeechBubble>\n        <label>{parse(question.prompt)}</label>\n      </SpeechBubble>\n    </Stack>\n  );\n};\n\nexport default Prompt;\n"],"names":["Alert","MaterialUI","Disclaimer","index","createElement","Fragment","LOCALIZED","DISCLAIMER_MESSAGE","severity","sx","padding","parse","name","type","title","label","inputs","value","optional","selected","obj","valueId","optionsKey","options","requiredFields","isSubmissionComplete","submission","every","field","validateField","fieldData","find","item","validationRules","full_name","trim","phone","service_time","isNaN","Date","getTime","location","service_type","Array","isArray","length","TextField","Stack","Button","CircularProgress","LinearProgress","getAddressObject","address_components","number","c","types","includes","long_name","street","short_name","address_1","city","state","country","zipcode","libraries","AddressAutoComplete","input","handleBlur","loadingLocation","setLoadingLocation","useState","errors","setErrors","inputRef","useRef","isLoaded","loadError","useLoadScript","googleMapsApiKey","GMAPS_API_KEY","useEffect","current","window","google","autocomplete","maps","places","Autocomplete","addListener","handlePlaceChanged","place","getPlace","addressObj","handleInputChange","error","console","event","clearInstanceListeners","nativeEvent","Event","target","errorMessage","validateLocation","prevErrors","spacing","direction","marginTop","display","width","onChange","onBlur","variant","margin","fullWidth","InputProps","endAdornment","size","required","helperText","color","onClick","handleUseGps","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","Geocoder","geocode","lat","lng","results","status","err","disabled","LocationIcon","PhoneField","setValidPhoneNumber","formatted","phoneNumber","replace","slice","formatPhoneNumber","valid","validatePhoneNumber","FormControl","FormControlLabel","FormGroup","Checkbox","Box","FormLabel","Services","selectedServices","setSelectedServices","handleCheckboxChange","checked","prev","filter","service","services","matchedServices","map","id","component","gridTemplateColumns","gap","control","text","InputField","handleTextChange","handleDateChange","handleConsentChange","selectedDate","marginBottom","SMS_CONSENT_MESSAGE","LocalizationProvider","dateAdapter","AdapterDateFns","justifyContent","DatePicker","onAccept","disablePast","TimePicker","Card","CardContent","CardActions","Typography","CardHeader","EmbedForm","questions","questionData","validPhoneNumber","loading","setLoading","submitted","setSubmitted","formStarted","setFormStarted","formSubmissionId","setFormSubmissionId","setSelectedDate","setChecked","turnstileToken","setTurnstileToken","turnstile","render","sitekey","TURNSTILE_SITE_KEY","callback","token","expired-callback","reset","remove","submit","async","flatMap","question","headers","source","origin","pathname","completed","fetch","API_URL","method","body","JSON","stringify","dataLayer","push","response","result","json","handleSubmit","Suspense","fallback","className","FORM_TITLE","subheader","FORM_SUBTITLE","space","Prompt","prompt","SUBMISSION_MESSAGE","autoComplete","noValidate","React","key","mt","flexDirection","style","LocationOnIcon","height","marginRight","fill","focusable","viewBox","d","StyledCardContent","props","backgroundColor","borderRadius","position","maxWidth","Avatar","_LOCALIZED$ASSETS_URL","assets","ASSETS_URL","alignItems","src","alt","SpeechBubble"],"sourceRoot":""}