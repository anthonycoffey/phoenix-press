{"version":3,"file":"487.86d062578f24db5af57a.js","mappings":"wLAGe,SAASA,GAAW,MAAEC,EAAK,oBAAEC,EAAmB,WAAEC,IAChE,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CAAC,GA6BtC,OACCC,EAAAA,EAAAA,eAACC,EAAAA,EAAS,CACTC,MAAOR,EAAMQ,MACbC,KAAMT,EAAMS,KACZC,MAAOV,EAAMU,MACbC,SAbyBC,IAC1B,MAAM,MAAEF,GAAUE,EAAMC,OAClBC,EAtBoBJ,KAC1B,MAAMK,EAAcL,EAAMM,QAAQ,MAAO,IAEzC,OAAID,EAAYE,QAAU,EAClBF,EACGA,EAAYE,QAAU,EACzB,IAAIF,EAAYG,MAAM,EAAG,OAAOH,EAAYG,MAAM,KAElD,IAAIH,EAAYG,MAAM,EAAG,OAAOH,EAAYG,MAAM,EAAG,MAAMH,EAAYG,MAAM,EAAG,KACxF,EAakBC,CAAkBT,GAC9BU,EAVsBV,KAC5B,MACMW,EAA+B,KADjBX,EAAMM,QAAQ,MAAO,IACfC,OAE1B,OADAhB,GAAoB,GACboB,EAAQ,kCAAoC,EAAE,EAMhCC,CAAoBR,GACzCV,EAAU,IAAKD,EAAQ,CAACH,EAAMS,MAAOW,IACrCpB,EAAMU,MAAQI,CAAS,EAStBS,OAAQrB,EACRsB,WAAS,EACTC,QAAQ,WACRC,OAAO,SACPC,KAAK,MACLC,UAAW5B,EAAM6B,SACjBC,QAAS3B,EAAOH,EAAMS,MACtBsB,WAAY5B,EAAOH,EAAMS,OAG5B,C","sources":["webpack://phoenix-press/./src/components/EmbedForm/PhoneField.jsx"],"sourcesContent":["import { TextField } from '@mui/material';\nimport { useContext, useEffect, useState } from 'react';\n\nexport default function PhoneField({ input, setValidPhoneNumber, handleBlur }) {\n\tconst [errors, setErrors] = useState({});\n\tconst formatPhoneNumber = (value) => {\n\t\tconst phoneNumber = value.replace(/\\D/g, '');\n\n\t\tif (phoneNumber.length <= 3) {\n\t\t\treturn phoneNumber;\n\t\t} else if (phoneNumber.length <= 6) {\n\t\t\treturn `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n\t\t} else {\n\t\t\treturn `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n\t\t}\n\t};\n\n\t// Function to validate phone number\n\tconst validatePhoneNumber = (value) => {\n\t\tconst phoneNumber = value.replace(/\\D/g, '');\n\t\tconst valid = phoneNumber.length !== 10;\n\t\tsetValidPhoneNumber(true);\n\t\treturn valid ? 'Valid phone number is required.' : '';\n\t};\n\n\tconst handleInputChange = (event) => {\n\t\tconst { value } = event.target;\n\t\tconst formatted = formatPhoneNumber(value);\n\t\tconst errorMessage = validatePhoneNumber(formatted);\n\t\tsetErrors({ ...errors, [input.name]: errorMessage });\n\t\tinput.value = formatted;\n\t};\n\n\treturn (\n\t\t<TextField\n\t\t\tlabel={input.label}\n\t\t\tname={input.name}\n\t\t\tvalue={input.value}\n\t\t\tonChange={handleInputChange}\n\t\t\tonBlur={handleBlur}\n\t\t\tfullWidth\n\t\t\tvariant=\"outlined\"\n\t\t\tmargin=\"normal\"\n\t\t\ttype=\"tel\"\n\t\t\trequired={!input.optional}\n\t\t\terror={!!errors[input.name]}\n\t\t\thelperText={errors[input.name]}\n\t\t/>\n\t);\n}\n"],"names":["PhoneField","input","setValidPhoneNumber","handleBlur","errors","setErrors","useState","createElement","TextField","label","name","value","onChange","event","target","formatted","phoneNumber","replace","length","slice","formatPhoneNumber","errorMessage","valid","validatePhoneNumber","onBlur","fullWidth","variant","margin","type","required","optional","error","helperText"],"sourceRoot":""}