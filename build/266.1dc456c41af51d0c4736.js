"use strict";(self.webpackChunkphoenix_press=self.webpackChunkphoenix_press||[]).push([[266],{9266:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ components_ConversationalForm; }\n});\n\n// EXTERNAL MODULE: external "React"\nvar external_React_ = __webpack_require__(1609);\n// EXTERNAL MODULE: ./src/components/Prompt.jsx\nvar Prompt = __webpack_require__(7229);\n// EXTERNAL MODULE: external ["wp","element"]\nvar external_wp_element_ = __webpack_require__(6087);\n// EXTERNAL MODULE: ./node_modules/@mui/x-date-pickers/LocalizationProvider/LocalizationProvider.js\nvar LocalizationProvider = __webpack_require__(5737);\n// EXTERNAL MODULE: ./node_modules/@mui/x-date-pickers/DatePicker/DatePicker.js + 35 modules\nvar DatePicker = __webpack_require__(8014);\n// EXTERNAL MODULE: ./node_modules/@mui/x-date-pickers/TimePicker/TimePicker.js + 36 modules\nvar TimePicker = __webpack_require__(2687);\n// EXTERNAL MODULE: ./node_modules/@mui/x-date-pickers/AdapterDateFnsV3/AdapterDateFnsV3.js + 117 modules\nvar AdapterDateFnsV3 = __webpack_require__(8870);\n// EXTERNAL MODULE: ./src/state.js + 2 modules\nvar state = __webpack_require__(5800);\n// EXTERNAL MODULE: ./node_modules/html-react-parser/esm/index.mjs\nvar esm = __webpack_require__(900);\n;// ./src/components/Answer.jsx\n\n\nconst TextField = MaterialUI.TextField;\nconst Stack = MaterialUI.Stack;\nconst Checkbox = MaterialUI.Checkbox;\nconst FormControlLabel = MaterialUI.FormControlLabel;\n\n\n\nconst AddressAutoComplete = "./AddressAutoComplete";\nconst ServiceSelect = "./ServiceSelect";\nconst PhoneField = "./PhoneField";\n\nconst Answer = ({\n  question\n}) => {\n  const {\n    errors,\n    setErrors\n  } = (0,external_wp_element_.useContext)(state.GlobalStateContext);\n  const {\n    questions,\n    setQuestions,\n    currentQuestionIndex\n  } = (0,external_wp_element_.useContext)(state.GlobalStateContext);\n  const [selectedDate, setSelectedDate] = (0,external_wp_element_.useState)(new Date());\n  (0,external_wp_element_.useEffect)(() => {\n    if (questions) {\n      const updatedQuestions = [...questions];\n      const currentInput = updatedQuestions[currentQuestionIndex].inputs.find(input => input.name === "service_time");\n      if (currentInput) {\n        currentInput.value = selectedDate;\n        setQuestions(updatedQuestions);\n      }\n    }\n  }, [question, selectedDate]);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    const updatedQuestions = [...questions];\n    const currentInput = updatedQuestions[currentQuestionIndex].inputs.find(input => input.name === name);\n    currentInput.value = type === "checkbox" ? checked : value;\n    setQuestions(updatedQuestions);\n    if (currentInput.type === "text" || currentInput.type === "checkbox") {\n      // Validate text input\n      const errorMessage = validateField(currentInput);\n      setErrors({\n        ...errors,\n        [currentInput.name]: errorMessage\n      });\n    }\n  };\n  const validateField = input => {\n    if (!input.optional) {\n      switch (input.type) {\n        case "text":\n          return !input.value.trim() ? "This field is required" : "";\n        case "checkbox":\n          return !input.value ? "This field is required" : "";\n        default:\n          return "";\n      }\n    }\n    return "";\n  };\n  return (0,external_React_.createElement)(external_React_.Fragment, null, question.inputs.map((input, index) => {\n    if (input.type === "tel") {\n      return (0,external_React_.createElement)(PhoneField, {\n        input: input,\n        key: index,\n        onChange: handleInputChange\n      });\n    }\n    if (input.type === "text") {\n      return (0,external_React_.createElement)(TextField, {\n        key: index,\n        label: input.label,\n        name: input.name,\n        value: input.value,\n        onChange: handleInputChange,\n        fullWidth: true,\n        variant: "outlined",\n        margin: "normal",\n        error: !!errors[input.name],\n        helperText: errors[input.name],\n        required: !input.optional\n      });\n    }\n    if (input.type === "geo") {\n      return (0,external_React_.createElement)(AddressAutoComplete, {\n        input: input,\n        key: index\n      });\n    }\n    if (input.type === "select") {\n      return (0,external_React_.createElement)(ServiceSelect, {\n        input: input,\n        key: index\n      });\n    }\n    if (input.type === "textarea") {\n      return (0,external_React_.createElement)(TextField, {\n        key: index,\n        label: input.label,\n        name: input.name,\n        value: input.value,\n        onChange: handleInputChange,\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        required: !input.optional,\n        variant: "outlined",\n        margin: "normal"\n      });\n    }\n    if (input.type === "checkbox") {\n      return (0,external_React_.createElement)(FormControlLabel, {\n        sx: {\n          marginBottom: "1rem"\n        },\n        key: index,\n        control: (0,external_React_.createElement)(Checkbox, {\n          checked: input.value,\n          onChange: handleInputChange,\n          name: input.name,\n          required: !input.optional\n        }),\n        label: (0,esm["default"])(LOCALIZED.SMS_CONTENT_MESSAGE || input.label)\n      });\n    }\n    if (input.type === "datetime") {\n      return (0,external_React_.createElement)(LocalizationProvider.LocalizationProvider, {\n        dateAdapter: AdapterDateFnsV3.AdapterDateFns,\n        key: index\n      }, (0,external_React_.createElement)(Stack, {\n        direction: "row",\n        spacing: 2,\n        sx: {\n          marginTop: "1rem"\n        }\n      }, (0,external_React_.createElement)(DatePicker.DatePicker, {\n        label: "Select Date",\n        value: selectedDate,\n        onChange: handleDateChange,\n        disablePast: true,\n        fullWidth: true\n      }), (0,external_React_.createElement)(TimePicker.TimePicker, {\n        label: "Select Time",\n        value: selectedDate,\n        onChange: handleDateChange,\n        fullWidth: true\n      })));\n    }\n    return null;\n  }));\n};\n/* harmony default export */ var components_Answer = (Answer);\n// EXTERNAL MODULE: ./src/components/Disclaimer.jsx\nvar Disclaimer = __webpack_require__(4338);\n;// ./src/components/ConversationalForm.jsx\n\nconst Button = MaterialUI.Button;\nconst Card = MaterialUI.Card;\nconst CardContent = MaterialUI.CardContent;\nconst ConversationalForm_Stack = MaterialUI.Stack;\nconst Box = MaterialUI.Box;\nconst CardHeader = MaterialUI.CardHeader;\nconst Cancel = (0,external_React_.createElement)("svg", {\n  className: "MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-1iirmgg",\n  focusable: "false",\n  "aria-hidden": "true",\n  viewBox: "0 0 24 24",\n  "data-testid": "CancelIcon"\n}, (0,external_React_.createElement)("path", {\n  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z"\n}));\nconst LinearProgress = MaterialUI.LinearProgress;\n\n\n\n\n\nconst ConversationalForm = () => {\n  const {\n    questions,\n    currentQuestionIndex,\n    setCurrentQuestionIndex,\n    loading,\n    setLoading,\n    submitted,\n    setSubmitted,\n    isFormVisible,\n    setIsFormVisible,\n    errors\n  } = (0,external_wp_element_.useContext)(state.GlobalStateContext);\n  const currentQuestion = questions[currentQuestionIndex];\n  const [invalid, setInvalid] = (0,external_wp_element_.useState)(true);\n  const [formStarted, setFormStarted] = (0,external_wp_element_.useState)(false);\n  const [formSubmissionId, setFormSubmissionId] = (0,external_wp_element_.useState)(null);\n  const [turnstileToken, setTurnstileToken] = (0,external_wp_element_.useState)(null);\n  (0,external_wp_element_.useEffect)(() => {\n    const hasErrors = currentQuestion.inputs.some(input => errors[input.name]);\n    setInvalid(hasErrors);\n    return () => {\n      setInvalid(true);\n    };\n  }, [errors]);\n  (0,external_wp_element_.useEffect)(() => {\n    if (isFormVisible && window.turnstile) {\n      const id = window.turnstile.render("#conversation-turnstile-widget", {\n        sitekey: LOCALIZED.TURNSTILE_SITE_KEY,\n        callback: token => {\n          setTurnstileToken(token);\n        },\n        "expired-callback": () => {\n          window.turnstile.reset(id);\n        }\n      });\n    }\n  }, [isFormVisible]);\n  const toggleFormVisibility = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n    const submission = questions.flatMap(question => question.inputs.map(input => {\n      const {\n        name,\n        value,\n        obj\n      } = input;\n      return obj ? {\n        name,\n        value,\n        obj\n      } : {\n        name,\n        value\n      };\n    }));\n    const headers = {\n      "Content-Type": "application/json",\n      "X-Turnstile-Token": turnstileToken\n    };\n    const source = window.location.origin.replace(/^https?:\\/\\//, "") + window.location.pathname.replace(/\\/$/, "");\n    if (currentQuestionIndex + 1 === questions.length) {\n      return await completeSubmission(submission, source);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n    if (!formStarted) {\n      setFormStarted(true);\n      if (window?.dataLayer) {\n        window.dataLayer.push({\n          event: "form_start"\n        });\n      }\n    }\n    try {\n      if (!turnstileToken) {\n        return false;\n      }\n      if (formSubmissionId) {\n        await fetch(`${LOCALIZED.API_URL}/submit-lead-form/${formSubmissionId}`, {\n          method: "PUT",\n          headers,\n          body: JSON.stringify({\n            submission,\n            source\n          })\n        });\n      } else {\n        const response = await fetch(`${LOCALIZED.API_URL}/submit-lead-form`, {\n          method: "POST",\n          headers,\n          body: JSON.stringify({\n            submission,\n            source\n          })\n        });\n        const result = await response.json();\n        if (result?.id) {\n          setFormSubmissionId(result?.id);\n        }\n      }\n    } catch (error) {\n      console.error("There was an error", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const completeSubmission = async (submission, source) => {\n    try {\n      setLoading(true);\n      if (formSubmissionId) {\n        await fetch(`${LOCALIZED.API_URL}/submit-lead-form/${formSubmissionId}`, {\n          method: "PUT",\n          headers: {\n            "Content-Type": "application/json",\n            "X-Turnstile-Token": turnstileToken\n          },\n          body: JSON.stringify({\n            submission,\n            completed: true,\n            source\n          })\n        });\n      }\n      if (window?.dataLayer) {\n        window.dataLayer.push({\n          event: "form_submit",\n          submission,\n          source,\n          completed: true\n        });\n      }\n      setSubmitted(true);\n    } catch (error) {\n      console.error("There was an error", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (0,external_React_.createElement)("section", null, (0,external_React_.createElement)("button", {\n    onClick: toggleFormVisibility,\n    id: "phoenix-show-form-button",\n    "aria-label": "Show Lead Form"\n  }, (0,external_React_.createElement)("svg", {\n    xmlns: "http://www.w3.org/2000/svg",\n    className: "e-font-icon-svg e-fas-comment-alt",\n    viewBox: "0 0 512 512",\n    width: "24",\n    height: "24",\n    fill: "#fff"\n  }, (0,external_React_.createElement)("path", {\n    d: "M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 9.8 11.2 15.5 19.1 9.7L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z"\n  }))), isFormVisible && (0,external_React_.createElement)(Card, {\n    className: "phoenix-form"\n  }, (0,external_React_.createElement)(CardHeader, {\n    action: (0,external_React_.createElement)(Button, {\n      onClick: toggleFormVisibility,\n      "aria-label": "close"\n    }, (0,external_React_.createElement)(Cancel, null))\n  }), (0,external_React_.createElement)(external_React_.Fragment, null, submitted && (0,external_React_.createElement)(CardContent, null, (0,external_React_.createElement)(ConversationalForm_Stack, {\n    space: 2\n  }, (0,external_React_.createElement)(Prompt["default"], {\n    question: {\n      prompt: LOCALIZED.SUBMISSION_MESSAGE\n    }\n  }))), !submitted && (0,external_React_.createElement)(external_React_.Fragment, null, (0,external_React_.createElement)(CardContent, null, (0,external_React_.createElement)(ConversationalForm_Stack, {\n    space: 2\n  }, (0,external_React_.createElement)(Prompt["default"], {\n    question: currentQuestion\n  }), (0,external_React_.createElement)(components_Answer, {\n    question: currentQuestion\n  })), (0,external_React_.createElement)(ConversationalForm_Stack, {\n    direction: "row",\n    spacing: 2,\n    sx: {\n      width: "100%",\n      display: "flex",\n      my: "1rem",\n      justifyContent: currentQuestionIndex > 0 ? "space-between" : "flex-end"\n    }\n  }, currentQuestionIndex > 0 && (0,external_React_.createElement)(Button, {\n    variant: "contained",\n    onClick: () => setCurrentQuestionIndex(currentQuestionIndex - 1)\n  }, "Back"), (0,external_React_.createElement)(Button, {\n    sx: {\n      justifySelf: "end"\n    },\n    variant: "contained",\n    color: "primary",\n    onClick: () => {\n      handleSubmit();\n    },\n    disabled: invalid || loading || !turnstileToken\n  }, currentQuestionIndex + 1 === questions.length ? "Submit" : "Next")), (0,external_React_.createElement)(Disclaimer["default"], {\n    index: currentQuestionIndex\n  }), (0,external_React_.createElement)(Box, {\n    spacing: 2,\n    className: "phoenix-no-select",\n    sx: {\n      width: "100%",\n      display: "flex",\n      my: "1rem",\n      justifyContent: "center",\n      alignItems: "center",\n      minHeight: "1rem"\n    }\n  }, (loading || !turnstileToken) && (0,external_React_.createElement)(LinearProgress, {\n    sx: {\n      width: "100%"\n    }\n  }))))), (0,external_React_.createElement)("div", {\n    id: "conversation-turnstile-widget",\n    className: "cf-turnstile",\n    style: {\n      display: "flex",\n      justifyContent: "center",\n      margin: "1rem 0",\n      padding: "1rem"\n    },\n    "data-sitekey": LOCALIZED.TURNSTILE_SITE_KEY\n  })));\n};\n/* harmony default export */ var components_ConversationalForm = (ConversationalForm);\n\n//# sourceURL=webpack://phoenix-press/./src/components/ConversationalForm.jsx_+_1_modules?')},4338:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 1609);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var html_react_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! html-react-parser */ 900);\n\nconst Alert = MaterialUI.Alert;\n\nconst Disclaimer = ({\n  index\n}) => {\n  return index === 0 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, LOCALIZED.DISCLAIMER_MESSAGE && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Alert, {\n    severity: "info",\n    sx: {\n      padding: "1rem"\n    }\n  }, (0,html_react_parser__WEBPACK_IMPORTED_MODULE_1__["default"])(LOCALIZED.DISCLAIMER_MESSAGE)));\n};\n/* harmony default export */ __webpack_exports__["default"] = (Disclaimer);\n\n//# sourceURL=webpack://phoenix-press/./src/components/Disclaimer.jsx?')},7229:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ 1609);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var html_react_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! html-react-parser */ 900);\n\nconst Avatar = MaterialUI.Avatar;\nconst Stack = MaterialUI.Stack;\n\nconst Prompt = ({\n  question\n}) => {\n  var _LOCALIZED$ASSETS_URL;\n  const assets = (_LOCALIZED$ASSETS_URL = LOCALIZED?.ASSETS_URL) !== null && _LOCALIZED$ASSETS_URL !== void 0 ? _LOCALIZED$ASSETS_URL : "";\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Stack, {\n    direction: "row",\n    spacing: 2,\n    alignItems: "flex-start"\n  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Avatar, {\n    src: `${assets}/avatar.jpg`,\n    alt: "Technician Avatar"\n  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SpeechBubble, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, (0,html_react_parser__WEBPACK_IMPORTED_MODULE_1__["default"])(question.prompt))));\n};\n/* harmony default export */ __webpack_exports__["default"] = (Prompt);\n\n//# sourceURL=webpack://phoenix-press/./src/components/Prompt.jsx?')}}]);