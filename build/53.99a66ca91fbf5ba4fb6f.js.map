{"version":3,"file":"53.99a66ca91fbf5ba4fb6f.js","mappings":"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","sources":["webpack://phoenix-press/./node_modules/@mui/icons-material/LocationOn.js","webpack://phoenix-press/./src/components/EmbedForm/AddressAutoComplete.jsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7m0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5\"\n}), 'LocationOn');","import React, { useState, useEffect, useRef } from 'react';\nimport {\n\tTextField,\n\tStack,\n\tButton,\n\tCircularProgress,\n\tLinearProgress,\n} from '@mui/material';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport { useLoadScript } from '@react-google-maps/api';\n\nconst getAddressObject = (address_components) => {\n\tconst obj = {};\n\tif (!address_components) return obj;\n\n\tconst number = address_components.find((c) =>\n\t\tc.types.includes('street_number')\n\t)?.long_name;\n\tconst street = address_components.find((c) =>\n\t\tc.types.includes('route')\n\t)?.short_name;\n\n\tobj.address_1 = number && street ? `${number} ${street}` : '';\n\tobj.city =\n\t\taddress_components.find((c) => c.types.includes('locality'))\n\t\t\t?.long_name || '';\n\tobj.state =\n\t\taddress_components.find((c) =>\n\t\t\tc.types.includes('administrative_area_level_1')\n\t\t)?.short_name || '';\n\tobj.country =\n\t\taddress_components.find((c) => c.types.includes('country'))\n\t\t\t?.short_name || '';\n\tobj.zipcode =\n\t\taddress_components.find((c) => c.types.includes('postal_code'))\n\t\t\t?.long_name || '';\n\n\treturn obj;\n};\n\nconst libraries = ['places'];\n\nexport default function AddressAutoComplete({ input, handleBlur }) {\n\tconst [loadingLocation, setLoadingLocation] = useState(false);\n\tconst [errors, setErrors] = useState({});\n\tconst inputRef = useRef(null);\n\n\tconst { isLoaded, loadError } = useLoadScript({\n\t\tgoogleMapsApiKey: LOCALIZED?.GMAPS_API_KEY,\n\t\tlibraries,\n\t});\n\n\tuseEffect(() => {\n\t\tif (!inputRef.current || !window.google) return;\n\n\t\ttry {\n\t\t\tconst autocomplete = new window.google.maps.places.Autocomplete(\n\t\t\t\tinputRef.current\n\t\t\t);\n\t\t\tautocomplete.addListener('place_changed', () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst place = autocomplete.getPlace();\n\t\t\t\t\tconst addressObj = getAddressObject(\n\t\t\t\t\t\tplace.address_components\n\t\t\t\t\t);\n\t\t\t\t\thandleInputChange(addressObj);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Error handling place_changed event:', error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\twindow.google.maps.event.clearInstanceListeners(autocomplete);\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tconsole.error(\n\t\t\t\t'Error initializing Google Maps Autocomplete:',\n\t\t\t\terror\n\t\t\t);\n\t\t}\n\t}, [isLoaded]);\n\n\tconst handleUseGps = () => {\n\t\tif (!navigator.geolocation) {\n\t\t\tconsole.error('Geolocation is not supported by your browser.');\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoadingLocation(true);\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t(pos) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { latitude, longitude } = pos.coords;\n\t\t\t\t\tconst geocoder = new window.google.maps.Geocoder();\n\n\t\t\t\t\tgeocoder.geocode(\n\t\t\t\t\t\t{ location: { lat: latitude, lng: longitude } },\n\t\t\t\t\t\t(results, status) => {\n\t\t\t\t\t\t\tsetLoadingLocation(false);\n\t\t\t\t\t\t\tif (status === 'OK' && results[0]) {\n\t\t\t\t\t\t\t\tconst addressObj = getAddressObject(\n\t\t\t\t\t\t\t\t\tresults[0].address_components\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thandleInputChange(addressObj);\n\t\t\t\t\t\t\t\thandleBlur();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\t\t'Geocoder failed due to:',\n\t\t\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetLoadingLocation(false);\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Error in geolocation success callback:',\n\t\t\t\t\t\terror\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tsetLoadingLocation(false);\n\t\t\t\tconsole.error('Error in getting geolocation:', err);\n\t\t\t}\n\t\t);\n\t};\n\n\tconst handleInputChange = (event) => {\n\t\ttry {\n\t\t\tif (event.nativeEvent instanceof Event) {\n\t\t\t\tinput.value = event.target.value;\n\t\t\t} else {\n\t\t\t\tinput.obj = event;\n\t\t\t\tinput.value = `${event.address_1}, ${event.city}, ${event.state} ${event.zipcode}`;\n\t\t\t}\n\n\t\t\tconst errorMessage = validateLocation(input);\n\t\t\tsetErrors({ ...errors, [input.name]: errorMessage });\n\t\t} catch (error) {\n\t\t\tconsole.error('Error handling input change:', error);\n\t\t}\n\t};\n\n\tconst validateLocation = (input) => {\n\t\tif (!input.optional)\n\t\t\treturn !input.value.trim() ? 'This field is required' : '';\n\t};\n\n\tif (loadError) {\n\t\tconsole.error('Error loading maps:', loadError);\n\t\treturn <div>Error loading maps</div>;\n\t}\n\n\tif (!isLoaded) {\n\t\treturn <LinearProgress />;\n\t}\n\n\treturn (\n\t\t<Stack\n\t\t\tspacing={2}\n\t\t\tdirection=\"column\"\n\t\t\tsx={{ marginTop: '1rem', display: 'flex', width: '100%' }}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tlabel={input.label}\n\t\t\t\tname={input.name}\n\t\t\t\tvalue={input.value}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t\tonBlur={handleBlur}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tmargin=\"normal\"\n\t\t\t\tfullWidth\n\t\t\t\tinputRef={inputRef}\n\t\t\t\tInputProps={{\n\t\t\t\t\tendAdornment: loadingLocation ? (\n\t\t\t\t\t\t<CircularProgress size={20} />\n\t\t\t\t\t) : null,\n\t\t\t\t}}\n\t\t\t\trequired={!input.optional}\n\t\t\t\terror={!!errors[input.name]}\n\t\t\t\thelperText={errors[input.name]}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\taria-label=\"Use my location\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={handleUseGps}\n\t\t\t\tdisabled={loadingLocation}\n\t\t\t>\n\t\t\t\t{loadingLocation ? (\n\t\t\t\t\t<CircularProgress size={20} />\n\t\t\t\t) : (\n\t\t\t\t\t<LocationOnIcon />\n\t\t\t\t)}\n\t\t\t\tUse My Current Location\n\t\t\t</Button>\n\t\t</Stack>\n\t);\n}\n"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","_createSvgIcon","_jsxRuntime","default","jsx","d","getAddressObject","address_components","obj","number","find","c","types","includes","long_name","street","short_name","address_1","city","state","country","zipcode","libraries","AddressAutoComplete","input","handleBlur","loadingLocation","setLoadingLocation","useState","errors","setErrors","inputRef","useRef","isLoaded","loadError","useLoadScript","googleMapsApiKey","LOCALIZED","GMAPS_API_KEY","useEffect","current","window","google","autocomplete","maps","places","Autocomplete","addListener","place","getPlace","addressObj","handleInputChange","error","console","event","clearInstanceListeners","nativeEvent","Event","target","errorMessage","validateLocation","name","optional","trim","React","Stack","spacing","direction","sx","marginTop","display","width","TextField","label","onChange","onBlur","variant","margin","fullWidth","InputProps","endAdornment","CircularProgress","size","required","helperText","Button","color","onClick","handleUseGps","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","Geocoder","geocode","location","lat","lng","results","status","err","disabled","LocationOnIcon","LinearProgress"],"sourceRoot":""}