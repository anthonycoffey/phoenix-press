{"version":3,"file":"79.66914be6076a26b64ef9.js","mappings":"kPAYe,SAASA,GAAS,MAAEC,EAAK,WAAEC,IACzC,MAAOC,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAS,IAEnDC,EAAwBC,IAC7B,MAAM,MAAEC,EAAK,QAAEC,GAAYF,EAAMG,OACjCN,GAAqBO,GACpBF,EACG,IAAIE,EAAMH,GACVG,EAAKC,QAAQC,GAAYA,IAAYL,MAEzCN,GAAY,EAeb,OAZAY,EAAAA,EAAAA,YAAU,KACT,GAAIC,EAAAA,GAAYZ,EAAiBa,OAAS,EAAG,CAC5C,MAAMC,EAAkBF,EAAAA,EAASH,QAAQC,GACxCV,EAAiBe,SAASL,EAAQL,SAEnCP,EAAMO,MAAQS,EAAgBE,KAAKN,IAAO,CACzCL,MAAOK,EAAQL,MACfY,GAAIP,EAAQO,MAEd,IACE,CAACjB,KAGHkB,EAAAA,EAAAA,eAACC,EAAAA,EAAW,CAACC,UAAU,WAAWC,WAAS,EAACC,OAAO,UAClDJ,EAAAA,EAAAA,eAACK,EAAAA,EAAS,CAACH,UAAU,UAAS,8BAC9BF,EAAAA,EAAAA,eAACM,EAAAA,EAAS,MACTN,EAAAA,EAAAA,eAACO,EAAAA,EAAG,CACHC,GAAI,CACHC,QAAS,OACTC,oBAAqB,iBACrBC,IAAK,EACLC,QAAS,IAGTlB,EAAAA,GACAA,EAAAA,GAAUI,KAAKN,IACdQ,EAAAA,EAAAA,eAACa,EAAAA,EAAgB,CAChBL,GAAI,CAAEJ,OAAQ,GACdU,SACCd,EAAAA,EAAAA,eAACe,EAAAA,EAAQ,CACR5B,MAAOK,EAAQL,MACfC,QAASN,EAAiBe,SACzBL,EAAQL,OAET6B,SAAU/B,EACVgC,KAAMzB,EAAQyB,KACdC,KAAK,UAGPC,MAAO3B,EAAQ4B,WAOvB,C","sources":["webpack://phoenix-press/./src/components/EmbedForm/Services.jsx"],"sourcesContent":["import {\n\tFormControl,\n\tFormControlLabel,\n\tFormGroup,\n\tCheckbox,\n\tBox,\n\tCircularProgress,\n\tFormLabel,\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport services from '../../utils/services';\n\nexport default function Services({ input, handleBlur }) {\n\tconst [selectedServices, setSelectedServices] = useState([]);\n\n\tconst handleCheckboxChange = (event) => {\n\t\tconst { value, checked } = event.target;\n\t\tsetSelectedServices((prev) =>\n\t\t\tchecked\n\t\t\t\t? [...prev, value]\n\t\t\t\t: prev.filter((service) => service !== value)\n\t\t);\n\t\thandleBlur();\n\t};\n\n\tuseEffect(() => {\n\t\tif (services && selectedServices.length > 0) {\n\t\t\tconst matchedServices = services.filter((service) =>\n\t\t\t\tselectedServices.includes(service.value)\n\t\t\t);\n\t\t\tinput.value = matchedServices.map((service) => ({\n\t\t\t\tvalue: service.value,\n\t\t\t\tid: service.id,\n\t\t\t}));\n\t\t}\n\t}, [selectedServices]);\n\n\treturn (\n\t\t<FormControl component=\"fieldset\" fullWidth margin=\"dense\">\n\t\t\t<FormLabel component=\"legend\">Select desired service(s)</FormLabel>\n\t\t\t<FormGroup>\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: 'grid',\n\t\t\t\t\t\tgridTemplateColumns: 'repeat(2, 1fr)',\n\t\t\t\t\t\tgap: 1,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{services &&\n\t\t\t\t\t\tservices?.map((service) => (\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tsx={{ margin: 0 }}\n\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tvalue={service.value}\n\t\t\t\t\t\t\t\t\t\tchecked={selectedServices.includes(\n\t\t\t\t\t\t\t\t\t\t\tservice.value\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tonChange={handleCheckboxChange}\n\t\t\t\t\t\t\t\t\t\tname={service.name}\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabel={service.text}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t</FormGroup>\n\t\t</FormControl>\n\t);\n}\n"],"names":["Services","input","handleBlur","selectedServices","setSelectedServices","useState","handleCheckboxChange","event","value","checked","target","prev","filter","service","useEffect","services","length","matchedServices","includes","map","id","createElement","FormControl","component","fullWidth","margin","FormLabel","FormGroup","Box","sx","display","gridTemplateColumns","gap","padding","FormControlLabel","control","Checkbox","onChange","name","size","label","text"],"sourceRoot":""}